version: '3.9'

services:
  delivery:
    build:
      context: .
      dockerfile: delivery_service/Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - payment
    environment:
      - DATABASE_URL=sqlite:///./test.db 
    container_name: delivery_service

  payment:
    build:
      context: .
      dockerfile: payment_service/Dockerfile
    container_name: payment_service
    ports:
      - "8081:80"
    environment:
      - DATABASE_URL=sqlite:///./payment.db

  database:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    ports:
      - "8180:8080"
    environment:
      KEYCLOAK_ADMIN: nnoitra
      KEYCLOAK_ADMIN_PASSWORD: 123123
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    container_name: keycloak
    command: -v start-dev --import-realm

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_EXPLORE_ENABLED=true
    volumes:
      - grafana-storage:/var/lib/grafana

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./docker-config.yaml:/etc/promtail/docker-config.yaml
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: -config.file=/etc/promtail/docker-config.yaml

  node:
    image: prom/node-exporter:latest
    container_name: node
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.max-block-duration=30m'
      - '--storage.tsdb.min-block-duration=30m'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

volumes:
    prometheus:
      name: prometheus
    grafana-storage:
      driver: local
